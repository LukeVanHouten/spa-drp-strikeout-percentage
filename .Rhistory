mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
source("C:/Users/lukev/baseball_drp/week8.R")
print(params$best_param_row)
print(params[best_param_row, ])
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
verbose = False
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
max_depth = this_max_depth,
colsample_bytree= this_colsample_bytree,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
source("C:/Users/lukev/baseball_drp/week8.R")
View(more_stats_df)
first_batter_platoon_df <- more_stats_df %>%
select(pitcher, game_year, stand, p_throws, type) %>%
group_by(pitcher, game_year) %>%
summarize(platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
first_batter_platoon_df <- more_stats_df %>%
select(pitcher, game_year, stand, p_throws, type, at_bat_number) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number)
# group_by(pitcher, game_year) %>%
# summarize(platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
first_batter_platoon_df <- more_stats_df %>%
select(game_date, pitcher, game_year, stand, p_throws, at_bat_number) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number)
# group_by(pitcher, game_year) %>%
# summarize(platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
first_batter_platoon_df <- more_stats_df %>%
select(game_date, pitcher, game_year, stand, p_throws, at_bat_number) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
group_by(pitcher, game_year) %>%
summarize(first_batter_platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
View(more_stats_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games != 1, pitches_per_game < 45)
View(named_joined_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n())
View(strike_pitch_games_count_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games != 1, pitches_per_game < 45)
View(named_joined_df)
df_train_features <- named_joined_df %>%
subset(game_year != 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_train_labels <- named_joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- named_joined_df %>%
subset(game_year == 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_test_labels <- named_joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
max_depth = this_max_depth,
colsample_bytree= this_colsample_bytree,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
max_depth = this_max_depth,
colsample_bytree = this_colsample_bytree,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games > 3, pitches_per_game < 45)
View(named_joined_df)
df_train_features <- named_joined_df %>%
subset(game_year != 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_train_labels <- named_joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- named_joined_df %>%
subset(game_year == 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_test_labels <- named_joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
max_depth = this_max_depth,
colsample_bytree = this_colsample_bytree,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
more_stats_df %>%
select(pitcher == 643354, game_year == 2019) %>%
View()
more_stats_df %>%
select(pitcher = 643354, game_year = 2019) %>%
View()
more_stats_df %>%
select(pitcher = 643354, game_year = 2019) %>%
View(more_stats_df)
more_stats_df %>%
select(pitcher == 643354, game_year == 2019) %>%
View(more_stats_df)
foo <- more_stats_df %>%
select(pitcher == 643354, game_year == 2019)
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
slice_min(at_bat_number) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice(1) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice_head(1) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice_head(n =1) %>%
View()
more_stats_df %>%
filter(pitcher == 643354, game_year == 2019) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice_head(n = 1) %>%
View()
first_batter_platoon_df <- more_stats_df %>%
select(game_date, pitcher, game_year, stand, p_throws, at_bat_number) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice_head(n = 1) %>%
group_by(pitcher, game_year) %>%
summarize(first_batter_platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
first_batter_platoon_df <- more_stats_df %>%
select(game_date, pitcher, game_year, stand, p_throws, at_bat_number) %>%
group_by(game_date, pitcher, game_year) %>%
slice_min(at_bat_number) %>%
slice_head(n = 1) %>%
group_by(pitcher, game_year) %>%
summarize(first_batter_platoon_advantage = sum(stand == p_throws) / n())
View(first_batter_platoon_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games > 3, pitches_per_game < 45)
View(named_joined_df)
df_train_features <- named_joined_df %>%
subset(game_year != 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_train_labels <- named_joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- named_joined_df %>%
subset(game_year == 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game)
df_test_labels <- named_joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
etas <- c(0.05, 0.1, 0.15, 0.2)
nroundss <- c(50, 100, 200, 250)
max_depths <- c(2, 4, 6, 10)
colsample_bytrees <- c(0.5, 0.7, 0.8, 1)
params <- expand.grid(list(eta = etas, nrounds = nroundss, max_depth =
max_depths, colsample_bytree = colsample_bytrees))
best_mae <- 10
for (row in 1:nrow(params)){
this_eta <- params[row, "eta"]
this_nrounds <- params[row, "nrounds"]
this_max_depth <- params[row, "max_depth"]
this_colsample_bytree <- params[row, "colsample_bytree"]
this_model <- xgboost(
data = train_features,
label = train_labels,
eta = this_eta,
nrounds = this_nrounds,
max_depth = this_max_depth,
colsample_bytree = this_colsample_bytree,
verbose = FALSE
)
pred <- predict(this_model, test_features)
mae <- mean(abs(pred - df_test_labels$strikeout_percentage))
if (mae < best_mae){
best_mae <- mae
best_param_row <- row
}
}
print(best_mae)
print(params[best_param_row, ])
named_joined_df %>%
cbind(more_stats_df$p_throws)
View(named_joined_df)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n(),
p_throws)
View(strike_pitch_games_count_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games > 3, pitches_per_game < 45)
View(named_joined_df)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n(), p_throws)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n())
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n(),
throws = p_throws)
strike_pitch_games_count_df <- more_stats_df %>%
group_by(pitcher, game_year, p_throws) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n())
View(strike_pitch_games_count_df)
joined_df <- merge(merge(merge(first_batter_platoon_df,
strike_pitch_games_count_df,
by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"),
all.x = TRUE), sql_df, by = c("pitcher", "game_year"),
all.x = TRUE)
named_joined_df <- right_join(joined_df, names_df, by="pitcher") %>%
select(-POS) %>%
filter(pitch_count < 1000, games > 3, pitches_per_game < 45)
View(named_joined_df)
View(named_joined_df)
View(named_joined_df)
df_train_features <- named_joined_df %>%
subset(game_year != 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game, -p_throws)
df_train_labels <- named_joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- named_joined_df %>%
subset(game_year == 2021) %>%
select(-pitcher, -game_year, -name, -strikeout_percentage, -pitch_count,
-games, -pitches_per_game, -p_throws)
df_test_labels <- named_joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
strikes_pitches_games_df <- more_stats_df %>%
select(game_date, pitcher, game_year, p_throws, type) %>%
group_by(pitcher, game_year, p_throws) %>%
summarize(pitch_count = n(), games = n_distinct(game_date),
pitches_per_game = pitch_count / games,
strike_percentage = sum(type != "B") / n())
View(strikes_pitches_games_df)
