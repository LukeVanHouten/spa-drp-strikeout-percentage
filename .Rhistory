View(bref_joined_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(braf_df)
View(bref_df)
names <- read.csv("players.csv")
named_df <- merge(sql_df, names, by.x='pitcher', by.y='key_mlbam', all.x = TRUE)
bref_joined_df <- merge(named_df, bref_df, by.x=c("name", "game_year"), by.y=c("Name", "season"), all.x = TRUE)
View(bref_joined_df)
library(baseballr)
bref2015 <- bref_daily_pitcher("2015-03-28", "2015-11-01")
bref2016 <- bref_daily_pitcher("2016-04-03", "2016-11-02")
bref2017 <- bref_daily_pitcher("2017-04-02", "2017-11-01")
bref2018 <- bref_daily_pitcher("2018-03-29", "2018-10-28")
bref2019 <- bref_daily_pitcher("2019-03-28", "2019-10-30")
bref2021 <- bref_daily_pitcher("2021-04-01", "2021-11-02")
bref_df <- rbind(bref2015, bref2016, bref2017, bref2018, bref2019, bref2021) %>%
select(Name, season, Str, SO_perc)
write.csv(bref_df, "bref.csv", row.names=FALSE)
print(bref_df$Name)
write.csv(bref_df, "bref.csv", row.names=FALSE)
fileConn<-file("output.txt")
writeLines(bref_df$Name, fileConn)
close(fileConn)
fileConn<-file("output.txt")
writeLines(bref_df$Name, fileConn, useBytes=T)
close(fileConn)
View(bref_df$Name)
bref_df$Name
View(bref_df$Name, n = Inf)
print(bref_df$Name, n = Inf)
bref_df$Name %>% print(n = Inf)
bref_df$Name %>% as_tibble() %>% print(n = Inf)
iconv(bref_df$Name)
input_file <- "input.txt"
output_file <- "output.txt"
# Read in the input file as Latin-1 encoded text
text <- readLines(input_file, encoding = "Latin-1")
# Decode the text to plain text using the iconv() function
decoded_text <- iconv(text, from = "Latin-1", to = "UTF-8")
# Write the decoded text to a new file
writeLines(decoded_text, output_file, useBytes = TRUE)
input_file <- "input.txt"
output_file <- "output.txt"
# Read in the input file as Latin-1 encoded text
text <- readLines(input_file, encoding = "Latin-1")
# Decode the text to plain text using the iconv() function
decoded_text <- iconv(text, from = "Latin-1", to = "ASCII")
# Write the decoded text to a new file
writeLines(decoded_text, output_file, useBytes = TRUE)
install.packages("stringi")
library(stringi)
# Set the input file name and the output file name
input_file <- "input_file.txt"
output_file <- "output_file.txt"
# Read in the input file as Latin-1 encoded text
text <- readLines(input_file, encoding = "Latin-1")
# Decode the text to plain text using the stri_encode() function
decoded_text <- stri_encode(text, from = "latin1", to = "ascii", fallback = NA)
# Write the decoded text to a new file
writeLines(decoded_text, output_file)
# Set the input file name and the output file name
input_file <- "input_file.txt"
output_file <- "output_file.txt"
# Read in the input file as Latin-1 encoded text
text <- readLines(input_file, encoding = "Latin-1")
# Decode the text to plain text using the stri_encode() function
decoded_text <- stri_encode(text, from = "latin1", to = "ascii")
# Write the decoded text to a new file
writeLines(decoded_text, output_file)
# Set the input file name and the output file name
input_file <- "input.txt"
output_file <- "output.txt"
text <- readLines(input_file, encoding = "Latin-1")
# Decode the text to plain text using the stri_encode() function
decoded_text <- stri_encode(text, from = "latin1", to = "UTF-8")
# Write the decoded text to a new file
writeLines(decoded_text, output_file)
Encoding(bref_df$Name)
write.csv(bref_df, "bref.csv", row.names=FALSE)
names <- read.csv("players_no_accent.csv")
bref_df <- read.csv("bref_no_accent.csv")
View(names)
View(bref_df)
named_df <- merge(sql_df, names, by.x='pitcher', by.y='key_mlbam', all.x = TRUE)
bref_joined_df <- merge(named_df, bref_df, by.x=c("name", "game_year"), by.y=c("Name", "season"), all.x = TRUE)
View(bref_joined_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(df_train)
View(df_test)
View(names)
View(bref_df)
names <- read.csv("players.csv")
bref_df <- read.csv("bref.csv")
View(names)
View(bref_df)
names <- read.csv("players.csv")
bref_df <- read.csv("bref.csv")
View(names)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(joined_df)
View(joined_df)
View(joined_df[is.na(joined_df$Str), ]
View(joined_df[is.na(joined_df$Str), ])
broken_name <- joined_df[is.na(joined_df$Str), ]
print(unique(broken_name$name))
bref2015 <- bref_daily_pitcher("2015-03-28", "2015-11-01")
bref2016 <- bref_daily_pitcher("2016-04-03", "2016-11-02")
bref2017 <- bref_daily_pitcher("2017-04-02", "2017-11-01")
bref2018 <- bref_daily_pitcher("2018-03-29", "2018-10-28")
bref2019 <- bref_daily_pitcher("2019-03-28", "2019-10-30")
bref2021 <- bref_daily_pitcher("2021-04-01", "2021-11-02")
bref_df <- rbind(bref2015, bref2016, bref2017, bref2018, bref2019, bref2021) %>%
select(Name, season, Str, SO_perc)
write.csv(bref_df, "bref.csv", row.names=FALSE)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(names_df)
View(bref_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(sql_df)
query <- "
SELECT game_date, pitcher, events, type, game_year, stand, p_throws, at_bat_number
FROM statcast
WHERE game_date NOT BETWEEN '2021-03-01' AND '2021-03-31'
AND game_date NOT BETWEEN '2015-03-28' AND '2015-04-04'
AND game_date NOT BETWEEN '2016-03-28' AND '2016-04-02'
AND game_date NOT BETWEEN '2017-03-28' AND '2017-04-01'
"
k_df <- dbGetQuery(conn, query)
View(k_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
Head(platoon_s_df)
head(platoon_s_df)
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = n() / n_distinct(id)) %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
platoon_advantage <- platoon_s_df %>%
group_by(pitcher, game_year, stand, p_throws) %>%
summarize(platoon_count = sum(stand == p_throws)) %>%
mutate(total_count = n()) %>%
mutate(platoon_advantage = ifelse(total_count == 0, 0, platoon_count / total_count))
platoon_s_result <- left_join(strike_percentage, platoon_advantage, by = c("pitcher", "game_year"))
View(platoon_s_result)
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = n() / n_distinct(.data$id),
.groups = "drop_last") %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
platoon_advantage <- platoon_s_df %>%
group_by(pitcher, game_year, stand, p_throws) %>%
summarize(platoon_count = sum(stand == p_throws)) %>%
mutate(total_count = n()) %>%
mutate(platoon_advantage = ifelse(total_count == 0, 0, platoon_count / total_count))
platoon_s_result <- left_join(strike_percentage, platoon_advantage, by = c("pitcher", "game_year"))
View(platoon_s_result)
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = n() / n_distinct(.platoon_s_df$id),
.groups = "drop_last") %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
platoon_advantage <- platoon_s_df %>%
group_by(pitcher, game_year, stand, p_throws) %>%
summarize(platoon_count = sum(stand == p_throws)) %>%
mutate(total_count = n()) %>%
mutate(platoon_advantage = ifelse(total_count == 0, 0, platoon_count / total_count))
platoon_s_result <- left_join(strike_percentage, platoon_advantage, by = c("pitcher", "game_year"))
View(platoon_s_result)
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = n() / n_distinct(id),
.groups = "drop_last") %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
platoon_advantage <- platoon_s_df %>%
group_by(pitcher, game_year, stand, p_throws) %>%
summarize(platoon_count = sum(stand == p_throws),
total_count = n()) %>%
mutate(platoon_advantage = ifelse(total_count == 0, 0, platoon_count / total_count),
.groups = "drop_last")
platoon_s_result <- left_join(strike_percentage, platoon_advantage, by = c("pitcher", "game_year"))
platoon_s_df <- platoon_s_df %>%
mutate(row_id = row_number())
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = n() / n_distinct(row_id),
.groups = "drop_last") %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
platoon_advantage <- platoon_s_df %>%
group_by(pitcher, game_year, stand, p_throws) %>%
summarize(platoon_count = sum(stand == p_throws),
total_count = n()) %>%
mutate(platoon_advantage = ifelse(total_count == 0, 0, platoon_count / total_count),
.groups = "drop_last")
result <- left_join(strike_percentage, platoon_advantage, by = c("pitcher", "game_year"))
View(result)
head(result)
strike_percentage <- platoon_s_df %>%
filter(type %in% c("S", "X")) %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = sum(type %in% c("S", "X")) / n(),
.groups = "drop_last") %>%
mutate(strike_percentage = ifelse(is.na(strike_percentage), 0, strike_percentage))
View(strike_percentage)
platoon_s_df <- dbGetQuery(conn, platoon_s_query)
platoon_s_df %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = sum(type != "B") / n())
View(platoon_s_df)
platoon_s_df <- platoon_s_df %>%
group_by(pitcher, game_year) %>%
summarize(strike_percentage = sum(type != "B") / n())
View(platoon_s_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
head(platoon_df)
View(platoon_s_k_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number)
View(strikeout_df)
head(platoon_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
head(platoon_df)
platoon_df <- platoon_s_k_df %>%
select(pitcher, game_year, stand, p_throws) %>%
group_by(pitcher, game_year) %>%
summarize(platoon_advantage = sum(stand == p_throws) / n())
View(platoon_df)
head(strikeout_data)
head(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year) %>%
summarize(strikeout_percentage = mean(strikeouts / n_distinct(game_date)))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year) %>%
summarize(strikeout_percentage = mean(strikeouts / n_distinct(game_date)))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year) %>%
summarize(strikeout_percentage = mean(strikeouts / 771))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year) %>%
summarize(strikeout_percentage = mean(136 / n_distinct(game_date)))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
# group_by(pitcher, game_year) %>%
# summarize(strikeout_percentage = mean(strikeouts / n_distinct(game_date)))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout"))
# group_by(pitcher, game_year) %>%
# summarize(strikeout_percentage = mean(strikeouts / n_distinct(game_date)))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout"))
group_by(pitcher, game_year, game_date) %>%
summarize(strikeouts_game = sum(strikeouts))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year, game_date) %>%
summarize(strikeouts_game = sum(strikeouts))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year, game_date) %>%
summarize(strikeouts_game = sum(strikeouts), at_bats_game = count(at_bat_number))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
group_by(pitcher, game_year, game_date) %>%
summarize(strikeouts_game = sum(strikeouts), at_bats_game = n_distinct(at_bat_number))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
# group_by(pitcher, game_year, game_date) %>%
summarize(strikeouts_game = sum(strikeouts), at_bats_game = n_distinct(at_bat_number))
View(strikeout_df)
strikeout_df <- platoon_s_k_df %>%
select(game_date, pitcher, events, game_year, at_bat_number) %>%
filter(events != "") %>%
group_by(pitcher, game_year, game_date, at_bat_number) %>%
summarize(strikeouts = sum(events == "strikeout")) %>%
summarize(strikeouts_game = sum(strikeouts), at_bats_game = n_distinct(at_bat_number)) %>%
group_by(pitcher, game_year) %>%
summarize(strikeout_percentage = sum(strikeouts_game) / sum(at_bats_game))
View(strikeout_df)
result <- merge(merge(strike_df, platoon_df, by = c("pitcher", "game_year"), all.x = TRUE),
strikeout_df, by = c("pitcher", "game_year"), all.x = TRUE)
random_forest_df <- merge(result, sql_df, by = c("pitcher", "game_year"), all.x = TRUE)
View(random_forest_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
View(joined_df)
install.packages(shapr)
install.packages("shapr"")
install.packages("shapr")
library(shapr)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
model <- xgboost(
data = df_train_features,
label = df_train_labels,
nround = 20,
verbose = FALSE
)
model <- xgboost(
data = data.matrix(df_train_features),
label = data.matrix(df_train_labels),
nround = 20,
verbose = FALSE
)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
model <- xgboost(
data = train_features,
label = train_labels,
nround = 20,
verbose = FALSE
)
explainer <- shapr(train_features, model)
df_train_features <- joined_df %>%
subset(game_year != 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_range,
velo_iqr, vertical_movement_max, vertical_movement_range,
vertical_movement_iqr, horizontal_movement_max,
horizontal_movement_range, horizontal_movement_iqr,
release_spin_rate_max, release_spin_rate_iqr)
df_train_labels <- joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- joined_df %>%
subset(game_year == 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_range,
velo_iqr, vertical_movement_max, vertical_movement_range,
vertical_movement_iqr, horizontal_movement_max,
horizontal_movement_range, horizontal_movement_iqr,
release_spin_rate_max, release_spin_rate_iqr)
df_test_labels <- joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
model <- xgboost(
data = train_features,
label = train_labels,
nround = 20,
verbose = FALSE
)
explainer <- shapr(train_features, model)
p <- mean(train_labels)
explanation <- explain(
test_features,
approach = "empirical",
explainer = explainer,
prediction_zero = p
)
plot(explanation, plot_phi0 = FALSE, index_x_test = c(1, 6))
df_train_features <- joined_df %>%
subset(game_year != 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_iqr,
vertical_movement_max, vertical_movement_iqr,
horizontal_movement_max, horizontal_movement_iqr)
df_train_labels <- joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage)
df_test_features <- joined_df %>%
subset(game_year == 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_iqr,
vertical_movement_max, vertical_movement_iqr,
horizontal_movement_max, horizontal_movement_iqr)
df_test_labels <- joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage)
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
model <- xgboost(
data = train_features,
label = train_labels,
nround = 20,
verbose = FALSE
)
explainer <- shapr(train_features, model)
p <- mean(train_labels)
explanation <- explain(
test_features,
approach = "empirical",
explainer = explainer,
prediction_zero = p
)
plot(explanation, plot_phi0 = FALSE, index_x_test = c(1, 6))
View(model)
print(model)
View(explainer)
print(explainer)
strike_platoon_df <- platoon_s_k_df %>%
select(pitcher, game_year, stand, p_throws, type) %>%
group_by(pitcher, game_year) %>%
summarize(platoon_advantage = sum(stand == p_throws) / n())
summarize(strike_percentage = sum(type != "B") / n())
View(strike_platoon_df)
platoon_s_k_df <- dbGetQuery(conn, platoon_s_k_query)
strike_platoon_df <- platoon_s_k_df %>%
select(pitcher, game_year, stand, p_throws, type) %>%
group_by(pitcher, game_year) %>%
summarize(platoon_advantage = sum(stand == p_throws) / n())
summarize(strike_percentage = sum(type != "B") / n())
View(strike_platoon_df)
strike_platoon_df <- platoon_s_k_df %>%
select(pitcher, game_year, stand, p_throws, type) %>%
group_by(pitcher, game_year) %>%
summarize(platoon_advantage = sum(stand == p_throws) / n(),
strike_percentage = sum(type != "B") / n())
View(strike_platoon_df)
source("C:/Users/lukev/baseball_drp/week6.R", echo=TRUE)
print(train_features[!complete.cases(train_features), ])
df_train_features <- joined_df %>%
subset(game_year != 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_iqr,
vertical_movement_max, vertical_movement_iqr,
horizontal_movement_max, horizontal_movement_iqr) %>%
na.omit()
df_train_features <- joined_df %>%
subset(game_year != 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_iqr,
vertical_movement_max, vertical_movement_iqr,
horizontal_movement_max, horizontal_movement_iqr) %>%
na.omit()
df_train_labels <- joined_df %>%
subset(game_year != 2021) %>%
select(strikeout_percentage) %>%
na.omit()
df_test_features <- joined_df %>%
subset(game_year == 2021) %>%
select(strike_percentage, platoon_advantage, velo_max, velo_iqr,
vertical_movement_max, vertical_movement_iqr,
horizontal_movement_max, horizontal_movement_iqr) %>%
na.omit()
df_test_labels <- joined_df %>%
subset(game_year == 2021) %>%
select(strikeout_percentage) %>%
na.omit()
train_features <- data.matrix(df_train_features)
train_labels <- data.matrix(df_train_labels)
test_features <- data.matrix(df_test_features)
test_labels <- data.matrix(df_test_labels)
model <- xgboost(
data = train_features,
label = train_labels,
nround = 20,
verbose = FALSE
)
explainer <- shapr(train_features, model)
p <- mean(train_labels)
explainer <- shapr(train_features, model)
p <- mean(train_labels)
model <- xgboost(
data = na.omit(train_features),
label = na.omit(train_features),
nround = 20,
verbose = FALSE
)
explainer <- shapr(train_features, model)
p <- mean(train_labels)
